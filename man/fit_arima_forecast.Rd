% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modeling.R
\name{fit_arima_forecast}
\alias{fit_arima_forecast}
\title{Fit ARIMA Forecasting Model with Train-Test Validation}
\usage{
fit_arima_forecast(target, exog)
}
\arguments{
\item{target}{A numeric vector (n×1) of the target time series to forecast.
Should be a univariate time series. Missing values are not allowed.}

\item{exog}{A numeric matrix (n×m) of exogenous variables. Must have the same
number of rows as the target vector. Factors should be converted to dummy variables.}
}
\value{
A list containing:
\itemize{
\item model - The complete ARIMA model object from forecast::auto.arima
\item parameters - List of model parameters including:
\itemize{
\item order - ARIMA (p,d,q) order
\item coefficients - Model coefficients (AR, MA and regression terms)
\item aicc - Corrected Akaike Information Criterion
}
\item train_predictions - Fitted values on training data
\item test_predictions - Forecast values on test data
\item actual_test - Actual values from test split
\item actual_train - Actual values from training split
}
}
\description{
Fits an ARIMA model using automatic order selection (via forecast::auto.arima)
with exogenous variables, performing train-test split and returning detailed
model diagnostics and predictions.
}
\details{
Key features:
\itemize{
\item Uses 80/20 split for train/test sets
\item Disables approximation for accurate model selection
\item Returns both model object and prediction diagnostics
\item Maintains time series order during splitting
}
}
\examples{
\dontrun{
# Load and prepare data
port_data <- load_port_data("data/NewYork_dailydata.csv")
port_clean <- clean_port_data(port_data)

# Prepare modeling inputs
target <- port_clean$berth_duration
exog <- as.matrix(port_clean[, c("net_contribution", "moor_duration", 
                               "DailyAverageWindSpeed", "berth_num")])

# Fit model and analyze results
arima_result <- fit_arima_forecast(target, exog)

# Example analysis of results
plot(arima_result$actual_test, type = "l", col = "black")
lines(arima_result$test_predictions, col = "red")
legend("topright", legend = c("Actual", "Predicted"), 
       col = c("black", "red"), lty = 1)
}
}
